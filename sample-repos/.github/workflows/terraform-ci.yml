name: terraform-cicd
on:
  pull_request:
    branches:
      - dev
      - prod
    types: [opened, synchronize]
jobs:
  deploy:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: main-template/
    steps:
    - uses: actions/checkout@v2
    - uses: hashicorp/setup-terraform@v1
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: REGION
    
    - name: Terraform fmt
      id: fmt
      run: terraform fmt -check
      continue-on-error: true
    
    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color -lock=false
      continue-on-error: true
    
    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
          #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
          #### Terraform Validation ü§ñ${{ steps.validate.outputs.stdout }}
          #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`
          
          <details><summary>Show Plan</summary>
          
          \`\`\`${process.env.PLAN}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`main-template/\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

  conftest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: REGION
    - name: Terraform plan
      run: |
        cd main-template
        terraform init
        terraform plan -out deploy.tfplan -lock=false
        terraform show -json deploy.tfplan > deploy.json

    - name: test
      id: conftest
      uses: instrumenta/conftest-action@master
      continue-on-error: true
      with:
        files: main-template/deploy.json
        policy: policy/BRANCH/
        namespace: terraform
          
    - uses: actions/github-script@0.9.0
      if: github.event_name == 'pull_request'
      env:
        RESULT: "terraform\n${{ steps.conftest.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Conftest Result\'
          
          <details><summary>Show Result</summary>
          
          \`\`\`${process.env.RESULT}\`\`\`
          
          </details>
          
          *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`policy/BRANCH/\`, Workflow: \`${{ github.workflow }}\`*`;
            
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })